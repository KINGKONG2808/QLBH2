<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>